---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

env:
  SOPS_AGE_KEY_FILE: '{{.ROOT_DIR}}/age.key'

includes:
  app: ./apps

x-preconditions:
  - &container-directory-not-found
    sh: test -d {{.ROOT_DIR}}/apps/{{.CONTAINER}}/data
  - &container-file-not-found
    sh: test -f {{.ROOT_DIR}}/apps/{{.CONTAINER}}/{{.CONTAINER}}.container
  - &container-not-found
    sh: sudo podman inspect {{.CONTAINER}}
  - &container-service-not-found
    sh: systemctl status {{.CONTAINER}}
  - &not-root
    sh: '[[ $LOGNAME != "root" ]]'

tasks:

  default:
    cmd: go-task -l
    silent: true

  # https://github.com/coreos/rpm-ostree/issues/2127
  deps:
    desc: Install System Deps
    cmds:
      - sudo rpm-ostree install --idempotent --assumeyes bind-utils expect fastfetch fish fzf gron htop moreutils nano net-tools netcat nmap rsync starship systemd-networkd tcpdump telnet tree wget zoxide
      # - sudo rpm-ostree install --idempotent --assumeyes https://downloads.1password.com/linux/rpm/stable/x86_64/1password-cli-latest.x86_64.rpm --uninstall 1password-cli
      - sudo rpm-ostree status -v
      # - sudo systemctl reboot
    preconditions:
      - *not-root

  start-*:
    desc: Start a container service
    cmds:
      - task: reload-{{.CONTAINER}}
      - sudo systemctl start {{.CONTAINER}}
      - sudo systemctl is-active --quiet {{.CONTAINER}} || exit 1
      - sudo podman ps --all --filter name={{.CONTAINER}} --format "{{ `{{.Names}} - {{.Image}} - {{.Status}}` }}"
    vars:
      CONTAINER: '{{index .MATCH 0}}'
    preconditions:
      - *not-root

  stop-*:
    desc: Stop a container service
    cmd: sudo systemctl stop {{.CONTAINER}}
    vars:
      CONTAINER: '{{index .MATCH 0}}'
    preconditions:
      - *not-root
      - *container-service-not-found

  restart-*:
    desc: Restart a container service
    cmds:
      - task: reload-{{.CONTAINER}}
      - sudo systemctl restart {{.CONTAINER}}
      - sudo systemctl is-active --quiet {{.CONTAINER}} || exit 1
      - sudo podman ps --all --filter name={{.CONTAINER}} --format "{{ `{{.Names}} - {{.Image}} - {{.Status}}` }}"
    vars:
      CONTAINER: '{{index .MATCH 0}}'
    preconditions:
      - *container-service-not-found
      - *not-root

  status-*:
    desc: Status of a container service
    cmd: sudo systemctl status {{.CONTAINER}}
    vars:
      CONTAINER: '{{index .MATCH 0}}'
    preconditions:
      - *container-service-not-found
      - *not-root

  reload-*:
    desc: Reload a container service
    cmds:
      - sudo rsync -rv {{.ROOT_DIR}}/apps/{{.CONTAINER}}/{{.CONTAINER}}.container /etc/containers/systemd/
      - sudo rsync -rv --mkpath --delete {{.ROOT_DIR}}/apps/{{.CONTAINER}}/data/{{- if eq .CLI_FORCE false }}config/{{ end }} /etc/containers/systemd/{{.CONTAINER}}{{- if eq .CLI_FORCE false }}/config{{ end }}
      - sudo --preserve-env bash -c "find /etc/containers/systemd/{{.CONTAINER}}/config -type f -name "*.sops.*" -print0 | xargs -0 -I {} sops --config {{.ROOT_DIR}}/.sops.yaml --decrypt --in-place {}"
      - sudo systemctl daemon-reload
    vars:
      CONTAINER: '{{index .MATCH 0}}'
    label: reload-{{.CONTAINER}}
    sources:
      - '{{.ROOT_DIR}}/apps/{{.CONTAINER}}/{{.CONTAINER}}.container'
      - '{{.ROOT_DIR}}/apps/{{.CONTAINER}}/data/config/**/**'
    generates:
      - /etc/containers/systemd/{{.CONTAINER}}.container
      - /etc/containers/systemd/{{.CONTAINER}}/config/**/**
      - /run/systemd/generator/{{.CONTAINER}}.service
    preconditions:
      - *container-directory-not-found
      - *container-file-not-found
      - *not-root

  remove-*:
    desc: Remove a container service
    prompt: Remove the '{{.CONTAINER}}' container ... continue?
    cmds:
      - task: stop-{{.CONTAINER}}
      - sudo rm /etc/containers/systemd/{{.CONTAINER}}.container
      - sudo rm -rf /etc/containers/systemd/{{.CONTAINER}}
      - sudo rm -rf /run/systemd/generator/{{.CONTAINER}}.service
      - sudo systemctl daemon-reload
    vars:
      CONTAINER: '{{index .MATCH 0}}'
    preconditions:
      - *not-root

  logs-*:
    desc: Tail logs of a container
    cmd: sudo podman logs -f {{.CONTAINER}}
    vars:
      CONTAINER: '{{index .MATCH 0}}'
    preconditions:
      - *container-not-found
      - *not-root

  list:
    desc: List all containers
    cmd: sudo podman ps --all --format '{{ `{{.Names}}\t{{.Status}}\t{{.Networks}}` }}' --sort names | column -s$'\t' --table
    preconditions:
      - *not-root

  dotfiles:
    desc: Setup dotfiles
    cmds:
      - | # Nano
        git -C ~/.nano pull || git clone https://github.com/galenguyer/nano-syntax-highlighting ~/.nano
      - | # Fish Hooks
        tee /home/$LOGNAME/.config/fish/conf.d/hooks.fish > /dev/null <<EOF
        mise activate fish | source
        starship init fish | source
        zoxide init fish | source
        EOF
      - | # Fish Greeting
        tee /home/$LOGNAME/.config/fish/conf.d/fish_greeting.fish > /dev/null <<EOF
        function fish_greeting
            fastfetch
        end
        EOF
      - | # Fish Completions
        curl -fsSL -o /home/$LOGNAME/.config/fish/completions/task.fish \
            https://raw.githubusercontent.com/go-task/task/main/completion/fish/task.fish
    preconditions:
      - *not-root
